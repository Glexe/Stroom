@page "/"
@using Stroom.Client.Services
@using Stroom.Shared.Models
@using Stroom.Client.Components
@inject ITasksService TasksService
@inject AuthenticationStateProvider GetAuthenticationStateAsync

<style>
    .href-text {
    font-weight: 500;
    color: blue;
}

    .href-text:hover {
        text-decoration: underline;
    }
</style>

<PageTitle>Index</PageTitle>


<TasksDashboard @bind-Tasks="TasksAssignedToUser" />

<MudDivider Class="my-8" />

<TimeEntriesDashboard @bind-TimeEntries="CurrentUser.TimeEntries"/>


@code {
    private IEnumerable<TaskDto> TasksAssignedToUser = new List<TaskDto>();
    private User CurrentUser = new User();

    protected override async Task OnInitializedAsync()
    {
        TasksAssignedToUser = await TasksService.GetAsync();
        CurrentUser.TimeEntries = new List<TimeEntry>() { new TimeEntry() { Hours = 3 }, new TimeEntry() { Hours = 4, Date = DateTime.Now.AddDays(3) }, new TimeEntry() { Hours = 6, Date = DateTime.Now.AddDays(-1) }, new TimeEntry() { Hours = 1, Date = DateTime.Now.AddDays(2) } };
    }

    private void test()
    {
        var authstate = GetAuthenticationStateAsync.GetAuthenticationStateAsync().Result;
        var user = authstate.User;
        var name = user.Identity.Name;
    }
}