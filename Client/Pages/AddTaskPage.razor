@page "/tasks/new"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Stroom.Client.Services
@using Stroom.Shared
@using Stroom.Shared.Models
@using Stroom.Client.Components
@using static Stroom.Shared.Enums.TaskPropertiesEnums
@attribute [Authorize]
@inject HttpClient Http
@inject ITasksService TasksService

<PageTitle>Add new task</PageTitle>

<div>
    <TaskForm @bind-Task="Task" />
    <MudStack Row="true" Class="mt-4">
        <MudButton Href="/" StartIcon="@Icons.Material.Filled.Cancel" Color="Color.Error">Cancel</MudButton>
        <MudButton OnClick="Save" StartIcon="@Icons.Material.Filled.Save" Color="Color.Primary">Save</MudButton>
    </MudStack>
</div>

@code {
    private TaskDto Task { get; set; }

    private bool OrderCommentsDescending = true;
    private SortDirection CommentsSortDirection => OrderCommentsDescending ? SortDirection.Descending : SortDirection.Ascending;

    protected override void OnInitialized()
    {
        Task = new TaskDto();
    }

    private void FlipSortDirection(){
        OrderCommentsDescending = !OrderCommentsDescending;
        Task.Comments = Task.Comments.OrderByDirection(CommentsSortDirection, userComment => userComment.TimeStamp).ToList();
    }

    private void Save()
    {
        TasksService.AddAsync(Task);
    }
}